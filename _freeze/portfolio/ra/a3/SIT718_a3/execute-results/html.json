{
  "hash": "a6567ba368d00b6887365986db5faf92",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear programming and Game Theory\"\nformat: html\n---\n\n# Q1\nA food factory is making a beverage for a customer from mixing two diﬀerent existing\nproducts A and B. The compositions of A and B and prices ($/L) are given as follows,\n\n|Juice Blend  |Lime (L/100L)|Orange (L/100L) | Mango (L/100L) |Cost ($/L) |\n|         :---|               :---|             :---|             :---|        :---|\n|A           | 2                | 6              | 4              | 5         |\n|B           | 7                | 4              | 8              | 15        |\n\nThe customer requires that there must be at least 5 Litres (L) Orange and at least 5\nLitres of Mango concentrate per 100 Litres of the beverage respectively, but no more\nthan 6 Litres of Lime concentrate per 100 Litres of beverage. The customer needs at\nleast 150 Litres of the beverage per week.\n\n## (a)\n\nThis problem requires a best outcome (minimising cost) where the requirements of the problem (objective and constraint functions) are represented by linear relationships of the decision variables.\n\n## (b)\n\n### Decision variables:\n\nLet $x_1$ be the number of litres of product A used per week and $x_2$ be the number of litres of product B used each week.\n\n### Objective function:\n\nMinimise the cost of production. Product A costs \\$5/L and product B \\$15/L.\n\n$$\n\\text{Minimise Cost } = 5x_1 +15x_2 \n$$\n\n### Constraints:\n\nThe amount of lime must be $\\leq 0.06$L/L. Product A provides 0.02 L of lime per L, and product B provides 0.07 L of lime per L.\n\n$$\n0.02x_1+0.07x_2 \\leq 0.06(x_1+x_2)\n$$\n\nThis can be rearranged to\n\n$$\n-0.04x_1+0.01x_2 \\leq 0\n$$\n\nThis can be simplified to\n\n$$\n-4x_1+x_2 \\leq 0\n$$\n\nThe amount of orange must be $\\geq 0.05$L/L. Product A provides 0.06 L of orange per L, and product B provides 0.04 L of orange per L.\n\n$$\n0.06x_1+0.04x_2 \\geq 0.05(x_1+x_2)\n$$\n\nThis can be rearranged to\n\n$$\n0.01x_1-0.01x_2 \\geq 0\n$$\n\nThis can be simplified to\n\n$$\nx_1-x_2 \\geq 0\n$$\n\nThe amount of mango must be $\\geq 0.05$L/L. Product A provides 0.04 L of mango per L, and product B provides 0.08 L of mango per L.\n\n$$\n0.04x_1+0.08x_2 \\geq 0.05(x_1+x_2)\n$$\n\nThis can be rearranged to\n\n$$\n-0.01x_1+0.03x_2 \\geq 0\n$$\n\nThis can be simplified to\n\n$$\n-\\frac{1}{3}x_1+x_2 \\geq 0\n$$\n\nThe total volume of weekly beverage required is $\\geq 150$ L.\n\n$$\nx+1+x_2 \\geq 150\n$$\n\n### LP model summary\n\nMinimise $z=5x_1 +15x_2$\n\nSubject to:\n\n$$\n\\begin{align*}\n-4x_1+x_2 &\\leq 0 \\text{  (Lime constraint)} \\\\\nx_1-x_2 &\\geq 0 \\text{  (Orange constraint)} \\\\\n-\\frac{1}{3}x_1+x_2 &\\geq 0 \\text{  (Mango constraint)} \\\\\nx_1+x_2 &\\geq 150 \\text{  (Volume constraint)}\\\\\nx_1 &\\geq 0 \\text{  (Non-negative constraint)} \\\\\nx_2 &\\geq 0 \\text{  (Non-negative constraint)}\n\\end{align*}\n$$\n\n## (c)\n\nThe optimum values of the decision variables to minimise the cost of production found using the graphical method are 112.5L of product A and 37.5L of product B.\n\n![Graphical solution for the linear programming problem, showing the feasible region and the optimum point A (112.5, 37.5).](q1-graph.png){#fig-enter-label}\n\n### (d)\n\nThe iso-cost line is\n\n$$\nx_2 = -\\frac{1}{3}x_1 + \\frac{\\text{const}}{15}\n$$\n\nA parameterised iso-cost line is\n\n$$\nx_2 = -\\frac{c_1}{15}x_1 + \\frac{\\text{const}}{15}\n$$\n\nWe need to find the range of values for $c_1$ where the current optimum (point A) would still be optimal. The slope of the volume and mango constraints bound the solution at point A. The volume constraint slope is $=-1$, and the mango constraint slope is $=\\frac{1}{3}$\n\nConsidering the volume constraint slope, for the optimum to move from point A to point B, the slope of the iso-cost line needs to be greater than the slope of the volume constraint. Therefore,\n\n$$\n\\begin{align*}\n   -\\frac{c_1}{15} &> -1 \\\\\n   -c_1 &> -15 \\\\\n   c_1 &< 15\n\\end{align*}\n$$\n\nConsidering the mango constraint slope, for the optimum point to move from point A, the slope of the iso-cost line needs to be less than the slope of the mango constraint.\n\n$$\n\\begin{align*}\n   -\\frac{c_1}{15} &< \\frac{1}{3} \\\\\n   -c_1 &< 5 \\\\\n   c_1 &> -5\n\\end{align*}\n$$\n\nHowever, we cannot have a negative cost, so $c_1$ would be limited to 0.\n\n### Solution sensitivity to cost (\\$) of A\n\nTherefore the cost (\\$) of A can be within the following range without changing the optimum solution.\n\n$0 \\leq \\text{cost (\\$) A} < 15 $\n\n# Q2\n\nA factory makes three products called Spring, Autumn and Winter from three materials containing Cotton, Wool and Silk.\n\nTable: Sales price and production cost per ton of product. Purchase cost per ton of material.\n\n|        | Sales price | Production cost |        | Purchase price |\n| :----- | :---------- | :-------------- | :----- | :------------- |\n| Sprint | \\$60        | \\$5             | Cotton | \\$30           |\n| Autum  | \\$55        | \\$3             | Wool   | \\$45           |\n| Winter | \\$60        | \\$5             | Silk   | \\$50           |\n\n<br>\n\nTable: Maximal demand in tons for each product and the minimum cotton and wool proportions in each product.\n\n|        | Demand | min Cotton proporation | min Wool proportion |\n| :----- | :----- | :--------------------- | :------------------ |\n| Sprint | 3500   | 55%                    | 30%                 |\n| Autum  | 3300   | 45%                    | 40%                 |\n| Winter | 4200   | 30%                    | 50%                 |\n\n## (a)\n\n### Decision variables:\n\nLet $x_{ij}$ be the number of tons of products $j \\text{ for } j \\in \\{1= \\text{Spring}, 2 = \\text{Autum}, 3= \\text{Winter}\\}$ to be produced from materials $i \\text{ for } i \\in \\{1= \\text{Cotton}, 2 = \\text{Wool}, 3= \\text{Silk}\\}$\n\n-   Number of tons of each type of material used:\n    -   Cotton: $x_{11}+x_{12}+x_{13}$\n    -   Wool: $x_{21}+x_{22}+x_{23}$\n    -   Silk: $x_{31}+x_{32}+x_{33}$\n\n-   Number of tons of each type of product produced:\n    -   Spring: $x_{11}+x_{21}+x_{31}$\n    -   Autumn: $x_{12}+x_{22}+x_{32}$\n    -   Winter: $x_{13}+x_{23}+x_{33}$\n\n-   Revenue (\\$) from sales per ton:\n    $$\n    60(x_{11}+x_{21}+x_{31})+55(x_{12}+x_{22}+x_{32})+60(x_{13}+x_{23}+x_{33})\n    $$\n\n-   Production costs (\\$) per ton:\n    $$\n    5(x_{11}+x_{21}+x_{31})+3(x_{12}+x_{22}+x_{32})+5(x_{13}+x_{23}+x_{33})\n    $$\n\n-   Costs (\\$) of purchasing materials per ton:\n    $$\n    30(x_{11}+x_{12}+x_{13})+45(x_{21}+x_{22}+x_{23})+50(x_{31}+x_{32}+x_{33})\n    $$\n\n### Objective function:\n\n$$\n\\begin{split}\n    \\text{Profit per ton }&=\\text{revenue per ton  - production costs per ton- purchasing cost per ton} \\\\\n    \\text{max } z &= 60x_{11}+60x_{21}+60x_{31}+55x_{12}+55x_{22}+55x_{32}+60x_{13}+60x_{23}+60x_{33}\\\\\n    &-5x_{11}-5x_{21}-5x_{31}-3x_{12}-3x_{22}-3x_{32}-5x_{13}-5x_{23}-5x_{33} \\\\\n    &-30x_{11}-30x_{12}-30x_{13}-45x_{21}-45x_{22}-45x_{23}-50x_{31}-50x_{32}-50x_{33} \\\\\n    &= 25x_{11}+22x_{12}+25x_{13}\\\\ \n    & +10x_{21}+7x_{22}+10x_{23}\\\\\n    & +5x_{31}+2x_{32}+5x_{33} \\\\\n\\end{split}\n$$\n\n### Constraints:\n\n#### Demand\n\n-   Spring: $x_{11}+x_{21}+x_{31}\\leq3500$\n-   Autumn: $x_{12}+x_{22}+x_{32}\\leq3300$\n-   Winter: $x_{13}+x_{23}+x_{33}\\leq4200$\n\n#### Cotton proportion\n\nWith respect to cotton, the constraints indicate what cotton level should be in each product. For each product, the percentage of cotton can be calculated as the proportion of cotton in each product divided by the total amount of the product. For the spring product, since the cotton level must be at least 55%, we have the following constraint:\n\n$$\n\\begin{align*}\n\\frac{x_{11}}{x_{11}+x_{21}+x_{31}} &\\geq 0.55 \\\\\nx_{11} &\\geq 0.55(x_{11}+x_{21}+x_{31}) \\\\\n0.45x_{11}-0.55x_{21}-0.55x_{31}&\\geq 0 \\\\\n\\end{align*}\n$$\n\nFor the autumn product, since the cotton level must be at least 45%, we have the following constraint:\n\n$$\n\\begin{align*}\n\\frac{x_{12}}{x_{12}+x_{22}+x_{32}} &\\geq 0.45 \\\\\nx_{12} &\\geq 0.45(x_{12}+x_{22}+x_{32}) \\\\\n0.55x_{12}-0.45x_{22}-0.45x_{32}&\\geq 0 \\\\\n\\end{align*}\n$$\n\nFor the winter product, since the cotton level must be at least 30%, we have the following constraint:\n\n$$\n\\begin{align*}\n\\frac{x_{13}}{x_{13}+x_{23}+x_{33}} &\\geq 0.30 \\\\\nx_{13} &\\geq 0.30(x_{13}+x_{23}+x_{33}) \\\\\n0.70x_{13}-0.30x_{23}-0.30x_{33} &\\geq 0 \\\\\n\\end{align*}\n$$\n\n#### Wool proportion\n\nWith respect to wool, the constraints indicate what wool level should be in each product. For each product, the percentage of wool can be calculated as the proportion of wool in each product divided by the total amount of the product. For the spring product, since the wool level must be at least 30%, we have the following constraint:\n\n$$\n\\begin{align*}\n\\frac{x_{21}}{x_{11}+x_{21}+x_{31}} &\\geq 0.3 \\\\\nx_{21} &\\geq 0.3(x_{11}+x_{21}+x_{31}) \\\\\n-0.3x_{11}+0.7x_{21}-0.3x_{31} &\\geq 0 \\\\\n\\end{align*}\n$$\n\nFor the autumn product, since the wool level must be at least 40%, we have the following constraint:\n\n$$\n\\begin{align*}\n\\frac{x_{22}}{x_{12}+x_{22}+x_{32}} &\\geq 0.4 \\\\\nx_{22} &\\geq 0.4(x_{12}+x_{22}+x_{32}) \\\\\n-0.4x_{12}+0.6x_{22}-0.4x_{32} &\\geq 0 \\\\\n\\end{align*}\n$$\n\nFor the winter product, since the wool level must be at least 50%, we have the following constraint:\n\n$$\n\\begin{align*}\n\\frac{x_{23}}{x_{13}+x_{23}+x_{33}} &\\geq 0.5 \\\\\nx_{23} &\\geq 0.5(x_{13}+x_{23}+x_{33}) \\\\\n-0.5x_{13}+0.5x_{23}-0.5x_{23}&\\geq 0 \\\\\n\\end{align*}\n$$\n\n#### Non-negativity constraint:\n\nEach decision variable has to be greater than or equal to zero, giving $x_{ij} \\geq 0, i, j \\in \\{1,2,3\\}$\n\n### LP model summary\n\n$$\n\\text{max } z = 25x_{11}+22x_{12}+25x_{13} +10x_{21}+7x_{22}+10x_{23} +5x_{31}+2x_{32}+5x_{33}\n$$\n\nSubject to:\n\n$$\n\\begin{align*}\nx_{11}+x_{21}+x_{31}&\\leq3500\\text{ (Spring demand)} \\\\\nx_{12}+x_{22}+x_{32}&\\leq3300\\text{ (Autumn demand)} \\\\\nx_{13}+x_{23}+x_{33}&\\leq4200\\text{ (Winter demand)} \\\\\n0.45x_{11}-0.55x_{21}-0.55x_{31} &\\geq 0 \\text{ (Spring cotton proportion)}\\\\\n0.55x_{12}-0.45x_{22}-0.45x_{32}&\\geq 0 \\text{ (Autumn cotton proportion)}\\\\\n0.70x_{13}-0.30x_{23}-0.30x_{33} &\\geq 0 \\text{ (Winter cotton proportion)}\\\\ \n0.7x_{31}-0.3x_{11}-0.3x_{21} &\\geq 0 \\text{ (Spring wool proportion)}\\\\\n0.6x_{32}-0.4x_{12}-0.4x_{22} &\\geq 0 \\text{ (Autumn wool proportion)}\\\\\n0.5x_{33} -0.5x_{13}-0.5x_{23}&\\geq 0 \\text{ (Winter wool proportion)}\\\\ \nx_{ij} &\\geq 0, i, j \\in \\{1,2,3\\}\\text{ (Non-negativity)}   \n\\end{align*}\n$$\n\n## (b)\n\nThe linear programming model described in part (a) was formulated in R and solved using R Studio. The optimal profit is \\$198,050, and the optimal values of the decision variables are\n\nTable: Optimal values of each material used in each product (tons) to maximise the profit.\n\n| Material | Spring | Autumn | Winter |\n| :------- | :----- | :----- | :----- |\n| Cotton   | 2450   | 1980   | 2100   |\n| Wool     | 1050   | 1320   | 2100   |\n| Silk     | 0      | 0      | 0      |\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#\n# Assessment 3 Question 2\n#\n# Blending fibres\n\n# The variable mapping index table is in the Excel(Blending Fibres) \nlibrary(lpSolveAPI)\n\n# Create LP model\nlprec <- make.lp(9, 9) # 9 variables and 9 constraints\n\nlp.control(lprec, sense= \"maximize\") #  maximize profit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$anti.degen\n[1] \"fixedvars\" \"stalling\" \n\n$basis.crash\n[1] \"none\"\n\n$bb.depthlimit\n[1] -50\n\n$bb.floorfirst\n[1] \"automatic\"\n\n$bb.rule\n[1] \"pseudononint\" \"greedy\"       \"dynamic\"      \"rcostfixing\" \n\n$break.at.first\n[1] FALSE\n\n$break.at.value\n[1] 1e+30\n\n$epsilon\n      epsb       epsd      epsel     epsint epsperturb   epspivot \n     1e-10      1e-09      1e-12      1e-07      1e-05      2e-07 \n\n$improve\n[1] \"dualfeas\" \"thetagap\"\n\n$infinite\n[1] 1e+30\n\n$maxpivot\n[1] 250\n\n$mip.gap\nabsolute relative \n   1e-11    1e-11 \n\n$negrange\n[1] -1e+06\n\n$obj.in.basis\n[1] TRUE\n\n$pivoting\n[1] \"devex\"    \"adaptive\"\n\n$presolve\n[1] \"none\"\n\n$scalelimit\n[1] 5\n\n$scaling\n[1] \"geometric\"   \"equilibrate\" \"integers\"   \n\n$sense\n[1] \"maximize\"\n\n$simplextype\n[1] \"dual\"   \"primal\"\n\n$timeout\n[1] 0\n\n$verbose\n[1] \"neutral\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Set objective function\nset.objfn(lprec, c(25,\t22,\t25,\t10,\t7,\t10,\t5,\t2,\t5))\n\n# Constraints\nset.row(lprec, 1, c(1,1,1), indices = c(1,4,7)) # Spring demand\nset.row(lprec, 2, c(1,1,1), indices = c(2,5,8)) # Autumn demand \nset.row(lprec, 3, c(1,1,1), indices = c(3,6,9)) # Winter demand\nset.row(lprec, 4,c(0.45,-0.55,-0.55), indices =c(1,4,7)) # Spring cotton\nset.row(lprec, 5,c(0.55,-0.45,-0.45), indices =c(2,5,8)) # Autumn cotton\nset.row(lprec, 6,c(0.7,-0.3,-0.3), indices =c(3,6,9)) # Winter cotton\nset.row(lprec, 7,c(-0.3,0.7,-0.3), indices =c(1,4,7)) # Spring wool\nset.row(lprec, 8,c(-0.4,0.6,-0.4), indices =c(2,5,8)) # Autumn wool\nset.row(lprec, 9,c(-0.5,0.5,-0.5), indices =c(3,6,9)) # Winter Wool\n\n# Right hand side of constraints\nset.rhs(lprec, c(3500,\t3300,\t4200,\t0,\t0,\t0,\t0,\t0,\t0))\n\n# Constraint types\nset.constr.type(lprec, c(\"=\",\t\"=\",\t\"=\", \">=\", \">=\",\">=\",\t\">=\",\t\">=\",\t\">=\"))\n\n# Variable type\nset.type(lprec, c(1:9),\"real\")\n\n# Bounds for variables\nset.bounds(lprec, lower = rep(0, 9), upper = rep(Inf, 9))\n\n# Solve the LP model\nsolve(lprec) # http://lpsolve.sourceforge.net/5.5/solve.htm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get objective function value\nobjvalue<-get.objective(lprec)\nobjvalue\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 198050\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get solution values\nsolution<-get.variables(lprec)\nsolution\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2450 1980 2100 1050 1320 2100    0    0    0\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(solution[c(1,4,7)]) # Spring total\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3500\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(solution[c(2,5,8)]) # Autumn total\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3300\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(solution[c(3,6,9)]) # Winter total\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4200\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get constraint values\nget.constraints(lprec) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3500 3300 4200  525  495  840    0    0    0\n```\n\n\n:::\n:::\n\n\n\n# Q3\nConsider the following parlor game to be played between two players. Each player begins\nwith three chips: one red, one white, and one blue. Each chip can be used only once.\nTo begin, each player selects one of her chips and places it on the table, concealed.\nBoth players then uncover the chips and determine the payoﬀ to the winning player.\nIn particular, if both players play the same kind of chip, it is a draw; otherwise, the\nfollowing table indicates the winner and how much she receives from the other player.\nNext, each player selects one of her two remaining chips and repeats the procedure,\nresulting in another payoﬀ according to the following table. Finally, each player plays\nher one remaining chip, resulting in the third and ﬁnal payoﬀ.\n\nWinning Chip Payoﬀ |($)\n:----| :----\nRed beats white |200\nWhite beats blue |150\nBlue beats red |50\nMatching colors| 0\n\n## (a)\n\nThe strategy set for the game has six values \\{BRW, BWR, RBW, RWB, WBR, WRB\\}, where B - blue, R -red and W- white. Both players have the same set of strategies.\n\nTable: Development of payoff matrix, showing the payoff values for each game round.\n\n| Player 1 | BRW | BWR | RBW | RWB | WBR | WRB |\n| :------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| BRW      | 0   | 0   | 0   | 400 | -400| 0   |\n| BWR      | 0   | 0   | 400 | 0   | 0   | -400|\n| RBW      | 0   | -400| 0   | 0   | 0   | 400 |\n| RWB      | -400| 0   | 0   | 0   | 400 | 0   |\n| WBR      | 400 | 0   | 0   | -400| 0   | 0   |\n| WRB      | 0   | 400 | -400| 0   | 0   | 0   |\n\n<br>\n\nTable: Final payoff matrix for player 1 and security level for both players.\n\n| Player 1 | BRW | BWR | RBW | RWB | WBR | WRB | $s_i$ |\n| :--- | :- | :- | :- | :- | :- | :- | :-- |\n| BRW  | 0  | 0  | 0  | 400| -400| 0  | -400|\n| BWR  | 0  | 0  | 400| 0  | 0  | -400| -400|\n| RBW  | 0  | -400| 0 | 0  | 0  | 400| -400|\n| RWB  | -400| 0 | 0  | 0  | 400| 0  | -400|\n| WBR  | 400| 0  | 0  | -400| 0 | 0  | -400|\n| WRB  | 0  | 400| -400| 0 | 0  | 0  | -400|\n| **$t_j$** | **400**| **400**| **400**| **400**| **400**| **400**| |\n\nThe lower value for the game ($L$) is -400, and the upper value for the game ($U$) is 400. Since $L <U$, there is no saddle point and players must resort to mixed strategies.\n\n## (b)\n\n### LP model for player 1\n\nLet $x_i$ be the probability of choosing strategy $i$. Let $v$ be the value of the game.\n\nMaximise $z=v$\n\nSubject to:\n\n$$\n\\begin{align*}\nv + 400x_4 - 400x_5 &\\leq 0 \\text{ (payoff, player 2's strategy 1)}\\\\\nv + 400x_3 - 400x_6 &\\leq 0 \\text{ (payoff, player 2's strategy 2)}\\\\\nv - 400x_2 + 400x_6 &\\leq 0 \\text{ (payoff, player 2's strategy 3)}\\\\\nv - 400x_1 + 400x_5 &\\leq 0 \\text{ (payoff, player 2's strategy 4)}\\\\\nv + 400x_1 - 400x_4 &\\leq 0 \\text{ (payoff, player 2's strategy 5)}\\\\\nv + 400x_2 - 400x_3 &\\leq 0 \\text{ (payoff, player 2's strategy 6)}\\\\\nx_1+x_2+x_3+x_4+x_5+x_6&=1 \\text{ (sum of probabilities)}\\\\\nx_i&\\geq 0 \\text{ for } i\\in\\{1,2,3,4,5,6\\} \\text{ (Non-negative)} \\\\\nv &\\text{ u.r.s}\n\\end{align*}\n$$\n\n### LP model for player 2\n\nLet $y_j$ be the probability of choosing strategy $j$. Let $v$ be the value of the game.\n\nMinimise $z=v$\n\nSubject to:\n\n$$\n\\begin{align*}\nv - 400y_4 + 400y_5 &\\geq 0 \\text{ (payoff, player 1's strategy 1)}\\\\\nv - 400y_3 + 400y_6 &\\geq 0 \\text{ (payoff, player 1's strategy 2)}\\\\\nv + 400y_2 - 400y_6 &\\geq 0 \\text{ (payoff, player 1's strategy 3)}\\\\\nv + 400y_1 - 400y_5 &\\geq 0 \\text{ (payoff, player 1's strategy 4)}\\\\\nv - 400y_1 + 400y_4 &\\geq 0 \\text{ (payoff, player 1's strategy 5)}\\\\\nv - 400y_2 + 400y_3 &\\geq 0 \\text{ (payoff, player 1's strategy 6)}\\\\\ny_1+y_2+y_3+y_4+y_5+y_6&=1 \\text{ (sum of probabilities)}\\\\\ny_j&\\geq 0 \\text{ for } j\\in\\{1,2,3,4,5,6\\} \\text{ (Non-negative)} \\\\\nv &\\text{ u.r.s}\n\\end{align*}\n$$\n\n## (c)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#\n# Player I's game\nlibrary(lpSolveAPI)\n\n# Create LP model\nlpp1 <- make.lp(7, 7)\n\nlp.control(lpp1, sense= \"maximize\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$anti.degen\n[1] \"fixedvars\" \"stalling\" \n\n$basis.crash\n[1] \"none\"\n\n$bb.depthlimit\n[1] -50\n\n$bb.floorfirst\n[1] \"automatic\"\n\n$bb.rule\n[1] \"pseudononint\" \"greedy\"       \"dynamic\"      \"rcostfixing\" \n\n$break.at.first\n[1] FALSE\n\n$break.at.value\n[1] 1e+30\n\n$epsilon\n      epsb       epsd      epsel     epsint epsperturb   epspivot \n     1e-10      1e-09      1e-12      1e-07      1e-05      2e-07 \n\n$improve\n[1] \"dualfeas\" \"thetagap\"\n\n$infinite\n[1] 1e+30\n\n$maxpivot\n[1] 250\n\n$mip.gap\nabsolute relative \n   1e-11    1e-11 \n\n$negrange\n[1] -1e+06\n\n$obj.in.basis\n[1] TRUE\n\n$pivoting\n[1] \"devex\"    \"adaptive\"\n\n$presolve\n[1] \"none\"\n\n$scalelimit\n[1] 5\n\n$scaling\n[1] \"geometric\"   \"equilibrate\" \"integers\"   \n\n$sense\n[1] \"maximize\"\n\n$simplextype\n[1] \"dual\"   \"primal\"\n\n$timeout\n[1] 0\n\n$verbose\n[1] \"neutral\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Set objective function coefficients\nset.objfn(lpp1, c(0, 0, 0, 0, 0, 0, 1)) # x1, x2, x3, x4, x5, x6, v\n\n# Constraints\nset.row(lpp1, 1, c(400, -400, 1), indices = c(4, 5, 7))\nset.row(lpp1, 2, c(400, -400, 1), indices = c(3, 6, 7))\nset.row(lpp1, 3, c(-400, 400, 1), indices = c(2, 6, 7))\nset.row(lpp1, 4, c(-400, 400, 1), indices = c(1, 5, 7))\nset.row(lpp1, 5, c(400, -400, 1), indices = c(1, 4, 7))\nset.row(lpp1, 6, c(400, -400, 1), indices = c(2, 3, 7))\nset.row(lpp1, 7, rep(1,6), indices = c(1:6))\n\n# Set RHS of constraints\nset.rhs(lpp1, c(0, 0, 0, 0, 0, 0, 1))\n\n# Set constrain type\nset.constr.type(lpp1, c(\"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"=\"))\n\n# Set variable bounds\nset.bounds(lpp1, lower = c(0, 0, 0, 0, 0, 0, -Inf))\n\n# Set row names\nRowNames <- c(\"Con1\", \"Con2\", \"Con3\", \"Con4\", \"Con5\", \"Con6\", \"Con7\")\n\n# Set column names\nColNames <- c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\", \"x6\", \"v\")\n\ndimnames(lpp1) <- list(RowNames, ColNames)\n\nlpp1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModel name: \n            x1    x2    x3    x4    x5    x6     v       \nMaximize     0     0     0     0     0     0     1       \nCon1         0     0     0   400  -400     0     1  <=  0\nCon2         0     0   400     0     0  -400     1  <=  0\nCon3         0  -400     0     0     0   400     1  <=  0\nCon4      -400     0     0     0   400     0     1  <=  0\nCon5       400     0     0  -400     0     0     1  <=  0\nCon6         0   400  -400     0     0     0     1  <=  0\nCon7         1     1     1     1     1     1     0   =  1\nKind       Std   Std   Std   Std   Std   Std   Std       \nType      Real  Real  Real  Real  Real  Real  Real       \nUpper      Inf   Inf   Inf   Inf   Inf   Inf   Inf       \nLower        0     0     0     0     0     0  -Inf       \n```\n\n\n:::\n\n```{.r .cell-code}\n# Solve LP model\nsolve(lpp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get objective function value\nget.objective(lpp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get variable values\nget.variables(lpp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3333333 0.0000000 0.0000000 0.3333333 0.3333333 0.0000000 0.0000000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get constrain values\nget.constraints(lpp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0 0 0 0 0 0 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Player II's game\n\n# Create LP model\nlpp2 <- make.lp(7, 7)\n\nlp.control(lpp2, sense= \"minimize\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$anti.degen\n[1] \"fixedvars\" \"stalling\" \n\n$basis.crash\n[1] \"none\"\n\n$bb.depthlimit\n[1] -50\n\n$bb.floorfirst\n[1] \"automatic\"\n\n$bb.rule\n[1] \"pseudononint\" \"greedy\"       \"dynamic\"      \"rcostfixing\" \n\n$break.at.first\n[1] FALSE\n\n$break.at.value\n[1] -1e+30\n\n$epsilon\n      epsb       epsd      epsel     epsint epsperturb   epspivot \n     1e-10      1e-09      1e-12      1e-07      1e-05      2e-07 \n\n$improve\n[1] \"dualfeas\" \"thetagap\"\n\n$infinite\n[1] 1e+30\n\n$maxpivot\n[1] 250\n\n$mip.gap\nabsolute relative \n   1e-11    1e-11 \n\n$negrange\n[1] -1e+06\n\n$obj.in.basis\n[1] TRUE\n\n$pivoting\n[1] \"devex\"    \"adaptive\"\n\n$presolve\n[1] \"none\"\n\n$scalelimit\n[1] 5\n\n$scaling\n[1] \"geometric\"   \"equilibrate\" \"integers\"   \n\n$sense\n[1] \"minimize\"\n\n$simplextype\n[1] \"dual\"   \"primal\"\n\n$timeout\n[1] 0\n\n$verbose\n[1] \"neutral\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Set objective function coefficients\nset.objfn(lpp2, c(0, 0, 0, 0, 0, 0, 1)) # y1, y2, y3, y4, y5, y6, v\n\n# Constraints\nset.row(lpp2, 1, c(-400, 400, 1), indices = c(4, 5, 7))\nset.row(lpp2, 2, c(-400, 400, 1), indices = c(3, 6, 7))\nset.row(lpp2, 3, c(400, -400, 1), indices = c(2, 6, 7))\nset.row(lpp2, 4, c(400, -400, 1), indices = c(1, 5, 7))\nset.row(lpp2, 5, c(-400, 400, 1), indices = c(1, 4, 7))\nset.row(lpp2, 6, c(-400, 400, 1), indices = c(2, 3, 7))\nset.row(lpp2, 7, rep(1,6), indices = c(1:6))\n\n# Set RHS of constraints\nset.rhs(lpp2, c(0, 0, 0, 0, 0, 0, 1))\n\n# Set constrain type\nset.constr.type(lpp2, c(\">=\", \">=\", \">=\", \">=\", \">=\", \">=\", \"=\"))\n\n# Set variable bounds\nset.bounds(lpp2, lower = c(0, 0, 0, 0, 0, 0, -Inf))\n\n# Set row names\nRowNames <- c(\"Con1\", \"Con2\", \"Con3\", \"Con4\", \"Con5\", \"Con6\", \"Con7\")\n\n# Set column names\nColNames <- c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\", \"y6\", \"v\")\n\ndimnames(lpp2) <- list(RowNames, ColNames)\n\nlpp2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModel name: \n            y1    y2    y3    y4    y5    y6     v       \nMinimize     0     0     0     0     0     0     1       \nCon1         0     0     0  -400   400     0     1  >=  0\nCon2         0     0  -400     0     0   400     1  >=  0\nCon3         0   400     0     0     0  -400     1  >=  0\nCon4       400     0     0     0  -400     0     1  >=  0\nCon5      -400     0     0   400     0     0     1  >=  0\nCon6         0  -400   400     0     0     0     1  >=  0\nCon7         1     1     1     1     1     1     0   =  1\nKind       Std   Std   Std   Std   Std   Std   Std       \nType      Real  Real  Real  Real  Real  Real  Real       \nUpper      Inf   Inf   Inf   Inf   Inf   Inf   Inf       \nLower        0     0     0     0     0     0  -Inf       \n```\n\n\n:::\n\n```{.r .cell-code}\n# Solve LP model\nsolve(lpp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get objective function value\nget.objective(lpp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get variable values\nget.variables(lpp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3333333 0.0000000 0.0000000 0.3333333 0.3333333 0.0000000 0.0000000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get constrain values\nget.constraints(lpp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0 0 0 0 0 0 1\n```\n\n\n:::\n:::\n\n\n## (d)\n\nFrom the optimal solutions of the two LPs, we obtain the following optimal strategies for the two players, and the value of the game $v$.\n\n$$\n\\begin{align*}\n    v&=0 \\\\\n    (x_1^*,x_2^*,x_3^*,x_4^*,x_5^*,x_6^*)&=\\left(\\frac{1}{3}, 0, 0, \\frac{1}{3}, \\frac{1}{3}, 0\\right) \\\\\n    (y_1^*,y_2^*,y_3^*,y_4^*,y_5^*,y_6^*)&=\\left(\\frac{1}{3}, 0, 0, \\frac{1}{3}, \\frac{1}{3}, 0\\right)\n\\end{align*}\n$$\n\nThat is, Player 1 should play the strategies BRW, RWB and WBR each $\\frac{1}{3}$ of the time. Player 2 should play the strategies BRW, RWB and WBR each $\\frac{1}{3}$ of the time, and the value of the game is \\$0.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}